subject: Redis
topic: Pipelining
questions:
  - question: What does redis pipelining solve ?
    answers: 0
    options:
      - Reduce the number of round trips to the server
      - Reduces the number of commands executed
      - Reduces the execution time of the commands
  - question:
      -
      - allows to
      - multiple
      - in a single
      - trip
    answers:
      - Pipelining
      - execute
      - commands
      - round
  - question: Why is pipelining efficient ?
    answers:
      - 0
      - 1
      - 2
    options:
      - Reduces the number of trips overhead
      - Reduces the latency
      - Reduces the number of syscalls the client has to make
      - Reduces the number of commands to be executed
      - Reduces the execution time of the commands
  - question:
      - Client
      - the command,
      - writes the
      - to the
      - and reads the
      - .
    answers:
      - serializes
      - command
      - socket
      - response
  - question: Pipelining is used to buffer a series of commands and sending them to the server in a batch ?
    answers: 0
    options:
      - Yes
      - No
  - question: What does the pipelined commands return ?
    answers: 0
    options:
      - Result of all the command executed
      - Result of the last executed command
      - Result of the first executed command
      - OK
      - 1
      - Number of commands executed
  - question: Which method is used to create a pipeline in node_redis ?
    answers: batch
  - question: Which command is used to send the batched commands in a pipeline to be executed ?
    answers: exec
  - question: What does `pipeline.exec` return ?
    answers: 0
    options:
      - An array of responses
      - An object of all the responses
      - A set of all the responses
      - String "OK"
  - question: Which types of operation can you perform inside of a node_redis pipeline?
    answers:
      text: 0
      explanation: A pipeline can be used to perform any combination of Redis commands, regardless of whether they perform reads or writes.
    options:
      - Any combination of reads and writes
      - Either reads or writes, but not both in the same pipeline
      - Only writes
      - Only reads
  - question: Is there a difference between redis pipeline and transaction ?
    answers: 0
    options:
      - Yes
      - No
  - question: Is all the commands in a pipeline executed atomically ?
    answers: 0
    options:
      - No
      - Yes
  - question: Does the server blocks until all the commands of a pipeline has been executed ?
    answers:
      text: 0
      explanation: The server will continue to receive commands and if there other commands sent by another client, it will execute it.
    options:
      - No
      - Yes
  - question: Is the pipeline order preserved in a pipeline ?
    answers:
      text: 0
      explanation: Any intermediary commands will be executed along with the pipeline commands
    options:
      - No
      - Yes
  - question: Does redis pipeline return the result of each command immediately ?
    answers:
      text: 0
      explanation: Pipelining returns the result of all commands after all of them have been executed
    options:
      - No
      - Yes
  - question: When should pipeline be used ?
    answers:
      - 0
      - 1
    options:
      - Two or more commands to execute
      - Can wait for the response of all commands at once
      - Atomic execution of commands
      - Blocking other clients while executing the commands of the pipeline
  - question: Which techniques can you use to atomically execute two or more Redis commands?
    answers:
      - 0
      - 1
    options:
      - Transactions
      - Lua Scripting
      - Pipelining
      - Connection pooling
      - Batching
  - question: Which techniques can you use to execute two or more Redis commands?
    answers:
      - 0
      - 1
      - 2
    options:
      - Transactions
      - Lua Scripting
      - Pipelining
      - Connection pooling
      - Batching
